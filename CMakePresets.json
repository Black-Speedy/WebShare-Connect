{
    "version": 3,
    "configurePresets": [
        {
            "name": "windows-base",
            "hidden": true,
            "generator": "Ninja",
            "binaryDir": "${sourceDir}/compiled/build/${presetName}",
            "installDir": "${sourceDir}/compiled/install/${presetName}",
            "environment": {
                // Path to vcpkg, adjust as necessary
                "VCPKG_ROOT": "F:/packagemanagers/vcpkg"
                // If needed below is how to se the path for the 
            },
            "cacheVariables": {
                "CMAKE_TOOLCHAIN_FILE": "${env:VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake",
                
                //** Choose compiler by setting path. If using a compiler that expects to have its other components
                //*  in the enviroment then you can try adding it to path and then write {compilername}.exe

                "CMAKE_C_COMPILER": "clang.exe",
                "CMAKE_CXX_COMPILER": "clang.exe++.exe"
            },
            "condition": {
                "type": "equals",
                "lhs": "${hostSystemName}",
                "rhs": "Windows"
            }
        },
        {
            "name": "linux-base",
            "hidden": true,
            "generator": "Ninja",
            "binaryDir": "${sourceDir}/compiled/build/${presetName}",
            "installDir": "${sourceDir}/compiled/install/${presetName}",
            "cacheVariables": {
                "CMAKE_INSTALL_PREFIX": "${sourceDir}/compiled/install/${presetName}"
                // Choose compiler by setting path
                //,"CMAKE_C_COMPILER": "clang",
                //"CMAKE_CXX_COMPILER": "clang++"
            },
            "condition": {
                "type": "equals",
                "lhs": "${hostSystemName}",
                "rhs": "Linux"
            }
        },
        {
            "name": "x64-debug",
            "displayName": "x64 Debug",
            "inherits": ["windows-base", "linux-base"],
            "architecture": {
                "value": "x64",
                "strategy": "external"
            },
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Debug"
            }
        },
        {
            "name": "x64-release",
            "displayName": "x64 Release",
            "inherits": ["windows-base", "linux-base"],
            "architecture": {
                "value": "x64",
                "strategy": "external"
            },
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Release"
            }
        },
        {
            "name": "x86-debug",
            "displayName": "x86 Debug",
            "inherits": ["windows-base", "linux-base"],
            "architecture": {
                "value": "x86",
                "strategy": "external"
            },
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Debug"
            }
        },
        {
            "name": "x86-release",
            "displayName": "x86 Release",
            "inherits": ["windows-base", "linux-base"],
            "architecture": {
                "value": "x86",
                "strategy": "external"
            },
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Release"
            }
        },
        {
            "name": "Configure preset using toolchain file",
            "displayName": "Configure preset using toolchain file",
            "description": "Sets Ninja generator, build and install directory",
            "generator": "Ninja",
            "binaryDir": "${sourceDir}/out/build/${presetName}",
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Debug",
                "CMAKE_TOOLCHAIN_FILE": "",
                "CMAKE_INSTALL_PREFIX": "${sourceDir}/out/install/${presetName}"
            }
        }
    ]
}